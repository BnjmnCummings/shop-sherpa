name: Production Deployment

on:
  workflow_run:
    workflows:
      - Development
    types:
      - completed

permissions:
  contents: read
  deployments: write

env:
  VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN:      ${{ secrets.VERCEL_TOKEN }}

jobs:
  deploy-production:
    name: Deploy Production
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        run: npm install --global pnpm@latest

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token="$VERCEL_TOKEN"

      - name: Build Project Artifacts
        run: vercel build --prod --token="$VERCEL_TOKEN"

      - name: Deploy Project Artifacts to Vercel
        id: vercel
        run: |
          echo "URL=$(vercel deploy --prod --confirm --token=${{ secrets.VERCEL_TOKEN }} --cwd .)" >> $GITHUB_OUTPUT

      - name: Link GitHub Deployment to URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploy = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'Production',
              required_contexts: []
            });

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deploy.data.id,
              state: 'success',
              environment_url: process.env.URL
            });
