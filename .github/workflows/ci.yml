name: Development

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'chore/**'
  pull_request:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'chore/**'


env:
  PNPM_VERSION: 8.x
  NODE_VERSION: 20.x

jobs:
  setup-cache:
    runs-on: ubuntu-latest
    outputs:
      store-path: ${{ steps.get-store-path.outputs.store-path }}
    steps:
      - name: Install pnpm & configure cache
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Get pnpm store directory
        id: get-store-path
        run: echo "::set-output name=store-path::$(pnpm store path --silent)"
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-store-path.outputs.store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.{js,ts,jsx,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nextjs-

  frontend-build:
    needs: setup-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint
        run: pnpm lint
      - name: Build Frontend
        run: pnpm build
      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: .next

  backend-build:
    needs: setup-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Backend
        run: |
          echo "No backend to build yet"
      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-placeholder
          path: /dev/null

  package:
    needs: [frontend-build, backend-build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: package
      - name: Download Backend Placeholder
        uses: actions/download-artifact@v4
        with:
          name: backend-placeholder
          path: package
      - name: Create Release Package
        run: |
          zip -r shopsmart-package.zip package/
      - name: Upload Release Package
        uses: actions/upload-artifact@v4
        with:
          name: shopsmart-release
          path: shopsmart-package.zip
